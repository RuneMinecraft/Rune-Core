import java.nio.charset.Charset
import java.nio.charset.StandardCharsets

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id("io.papermc.paperweight.userdev") version "1.7.3"
}

group = 'com.dank1234'
version = '0.1'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url "https://repo.dmulloy2.net/repository/public/"
    }
}

dependencies {
    paperweight.paperDevBundle("1.21.3-R0.1-SNAPSHOT")

    compileOnly("io.papermc.paper:paper-api:1.21.3-R0.1-SNAPSHOT")
    compileOnly("com.comphenix.protocol:ProtocolLib:4.8.0");
    compileOnly("net.luckperms:api:5.4")

    implementation("org.yaml:snakeyaml:2.0")
    implementation("org.reflections:reflections:0.9.12")
    implementation("org.jetbrains:annotations:24.1.0")
    implementation("org.mariadb.jdbc:mariadb-java-client:3.4.1")
    implementation("com.zaxxer:HikariCP:5.1.0")
    // implementation("com.fastasyncworldedit:FastAsyncWorldEdit-Bukkit:2.12.2")
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.compileJava {
    options.encoding = StandardCharsets.UTF_8.name()
}

tasks.javadoc {
    options.encoding = StandardCharsets.UTF_8.name()
}

tasks.shadowJar {
    archiveFileName = "Rune-Core-${version}.jar"
    destinationDirectory = file("S:/opt/mcsmanager/daemon/data/InstanceData/7fa7bc4eb4544091add082ae0b906aa0/plugins")
    mergeServiceFiles()
}

tasks.build {
    dependsOn(tasks.shadowJar)
}